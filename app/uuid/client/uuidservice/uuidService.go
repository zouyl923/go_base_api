// Code generated by goctl. DO NOT EDIT.
// Source: uuid.proto

package uuidservice

import (
	"context"

	"blog/app/uuid/pb/rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GenUuidReq = rpc.GenUuidReq
	GenUuidRes = rpc.GenUuidRes

	UuidService interface {
		GenUuid(ctx context.Context, in *GenUuidReq, opts ...grpc.CallOption) (*GenUuidRes, error)
	}

	defaultUuidService struct {
		cli zrpc.Client
	}
)

func NewUuidService(cli zrpc.Client) UuidService {
	return &defaultUuidService{
		cli: cli,
	}
}

func (m *defaultUuidService) GenUuid(ctx context.Context, in *GenUuidReq, opts ...grpc.CallOption) (*GenUuidRes, error) {
	client := rpc.NewUuidServiceClient(m.cli.Conn())
	return client.GenUuid(ctx, in, opts...)
}
