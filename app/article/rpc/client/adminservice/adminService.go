// Code generated by goctl. DO NOT EDIT.
// Source: article.proto

package adminservice

import (
	"context"

	"blog/app/article/rpc/pb/rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Article     = rpc.Article
	Category    = rpc.Category
	CategoryRes = rpc.CategoryRes
	DeleteReq   = rpc.DeleteReq
	Detail      = rpc.Detail
	EmptyReq    = rpc.EmptyReq
	EmptyRes    = rpc.EmptyRes
	ExamineReq  = rpc.ExamineReq
	InfoReq     = rpc.InfoReq
	PageData    = rpc.PageData
	SearchReq   = rpc.SearchReq
	UpdateReq   = rpc.UpdateReq
	UploadReq   = rpc.UploadReq
	UploadRes   = rpc.UploadRes
	User        = rpc.User

	AdminService interface {
		// 管理后台
		PageList(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*PageData, error)
		Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*EmptyRes, error)
		Examine(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*EmptyRes, error)
	}

	defaultAdminService struct {
		cli zrpc.Client
	}
)

func NewAdminService(cli zrpc.Client) AdminService {
	return &defaultAdminService{
		cli: cli,
	}
}

// 管理后台
func (m *defaultAdminService) PageList(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*PageData, error) {
	client := rpc.NewAdminServiceClient(m.cli.Conn())
	return client.PageList(ctx, in, opts...)
}

func (m *defaultAdminService) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	client := rpc.NewAdminServiceClient(m.cli.Conn())
	return client.Delete(ctx, in, opts...)
}

func (m *defaultAdminService) Examine(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	client := rpc.NewAdminServiceClient(m.cli.Conn())
	return client.Examine(ctx, in, opts...)
}
