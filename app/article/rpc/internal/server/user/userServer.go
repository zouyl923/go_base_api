// Code generated by goctl. DO NOT EDIT.
// Source: article.proto

package server

import (
	"context"

	"blog/app/article/rpc/internal/logic/user"
	"blog/app/article/rpc/internal/svc"
	"blog/app/article/rpc/pb/rpc"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	rpc.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

// 个人文章
func (s *UserServer) PageList(ctx context.Context, in *rpc.SearchReq) (*rpc.PageData, error) {
	l := userlogic.NewPageListLogic(ctx, s.svcCtx)
	return l.PageList(in)
}

func (s *UserServer) Push(ctx context.Context, in *rpc.UpdateReq) (*rpc.EmptyRes, error) {
	l := userlogic.NewPushLogic(ctx, s.svcCtx)
	return l.Push(in)
}

func (s *UserServer) Upload(ctx context.Context, in *rpc.UploadReq) (*rpc.UploadRes, error) {
	l := userlogic.NewUploadLogic(ctx, s.svcCtx)
	return l.Upload(in)
}

func (s *UserServer) UserDelete(ctx context.Context, in *rpc.DeleteReq) (*rpc.EmptyRes, error) {
	l := userlogic.NewUserDeleteLogic(ctx, s.svcCtx)
	return l.UserDelete(in)
}
