// Code generated by goctl. DO NOT EDIT.
// Source: article.proto

package server

import (
	"context"

	"blog/app/article/rpc/internal/logic/userservice"
	"blog/app/article/rpc/internal/svc"
	"blog/app/article/rpc/pb/rpc"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	rpc.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

// 个人文章
func (s *UserServiceServer) PageList(ctx context.Context, in *rpc.SearchReq) (*rpc.PageData, error) {
	l := userservicelogic.NewPageListLogic(ctx, s.svcCtx)
	return l.PageList(in)
}

func (s *UserServiceServer) Info(ctx context.Context, in *rpc.InfoReq) (*rpc.Article, error) {
	l := userservicelogic.NewInfoLogic(ctx, s.svcCtx)
	return l.Info(in)
}

func (s *UserServiceServer) Push(ctx context.Context, in *rpc.UpdateReq) (*rpc.EmptyRes, error) {
	l := userservicelogic.NewPushLogic(ctx, s.svcCtx)
	return l.Push(in)
}

func (s *UserServiceServer) Upload(ctx context.Context, in *rpc.UploadReq) (*rpc.UploadRes, error) {
	l := userservicelogic.NewUploadLogic(ctx, s.svcCtx)
	return l.Upload(in)
}

func (s *UserServiceServer) Delete(ctx context.Context, in *rpc.DeleteReq) (*rpc.EmptyRes, error) {
	l := userservicelogic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}
