syntax = "v1"

type (
	Article {
		Uuid         string        `json:"uuid"`
		Title        string        `json:"title"`
		Cover        string        `json:"cover"`
		CategoryId   int32         `json:"category_id"`
		CategoryInfo Category      `json:"category_info"`
		DetailInfo   ArticleDetail `json:"detail_info"`
	}
	ArticleDetail {
		content string `json:"content"`
	}
	Category {
		Id       int64  `json:"id"`
		ParentId int32  `json:"parent_id"`
		Name     string `json:"name"`
	}
	ArticleSearchReq {
		Page       int    `json:"page"`
		PageSize   int    `json:"page_size"`
		CategoryId int32  `json:"category_id"`
		Keyword    string `json:"category_id"`
	}
	ArticlePageList {
		Total    int64     `json:"total"`
		Data     []Article `json:"data"`
		Page     int       `json:"page"`
		PageSize int       `json:"page_size"`
	}
	ArticleInfoReq {
		Uuid string `form:"uuid"`
	}
)

@server (
	group:      v1/article
	middleware: CorsMiddleware
)
service article-api {
	@handler pageListHandler
	get /v1/article/page_list (ArticleSearchReq) returns (ArticlePageList)

	@handler infoHandler
	get /v1/article/info (ArticleInfoReq) returns (Article)
}

@server (
	group:      v1/category
	middleware: CorsMiddleware
)
service article-api {
	@handler allListHandler
	get /v1/category/all_list returns ([]Category)
}

